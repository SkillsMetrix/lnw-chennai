<p>Data Driven Form</p>

<form (ngSubmit)="addUser()" [formGroup]="myForm">
    UserName:<input type="text" formControlName="uname" />
    <div *ngIf="uname.invalid &&(uname.dirty || uname.touched)">
        <div>Username cant be blank</div>
    </div>
    Password:<input type="password" formControlName="password" />
    <div *ngIf="password.invalid &&(password.dirty || password.touched)">
        <div *ngIf="password.errors?.['required'] ">
            Password cant be blank
        </div>
        <div *ngIf="password.errors?.['minlength'] ">
            Password must be 6 char long
        </div>
    </div>

    Email: <input type="email" formControlName="email" />
    <div *ngIf="email.invalid &&(email.dirty || email.touched)">
        <div *ngIf="email.errors?.['required'] ">
            email cant be blank
        </div>
        <div *ngIf="email.errors?.['emailDomain'] ">
            Email must have lnw domain
        </div>
    </div>
    <button>Register</button>
</form>


-------------


import { Component } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-userform',
  templateUrl: './userform.component.html',
  styleUrl: './userform.component.css'
})
export class UserformComponent {

  myForm: FormGroup
  uname: FormControl
  password: FormControl
  email: FormControl

  createFormControl() {
    this.uname = new FormControl('',Validators.required)
    this.password = new FormControl('',[Validators.required,Validators.minLength(6)])
    this.email = new FormControl('',[Validators.required,Validators.email,this.emailDomainValidator])
  }
  createForm() {
    this.myForm = new FormGroup({
      uname: this.uname,
      password: this.password,
      email: this.email
    })
  }
  constructor() {
    this.createFormControl()
    this.createForm()
  }
  addUser(){
    console.log(this.myForm.value);
    
  }

  emailDomainValidator(control: FormControl){
    let email= control.value
    if(email && email.indexOf('@') != -1){
      let [before,domain]= email.split('@')
      if(domain !=='lnw.com'){
        return {
          emailDomain:{
            parseDomain:domain
          }
        }
      }
    }
    return null;
  }
}
